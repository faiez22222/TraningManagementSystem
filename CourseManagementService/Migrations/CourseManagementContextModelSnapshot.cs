// <auto-generated />
using System;
using CourseManagementService;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CourseManagementService.Migrations
{
    [DbContext(typeof(CourseManagementContext))]
    partial class CourseManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CourseManagementService.Model.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CourseDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("CourseManagementService.Model.CourseCalendar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CourseId")
                        .IsUnique();

                    b.ToTable("CourseCalendars");
                });

            modelBuilder.Entity("CourseManagementService.Model.DailyTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseCalendarId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Day")
                        .HasColumnType("date");

                    b.Property<string>("TaskDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CourseCalendarId");

                    b.ToTable("DailyTasks");
                });

            modelBuilder.Entity("CourseManagementService.Model.CourseCalendar", b =>
                {
                    b.HasOne("CourseManagementService.Model.Course", null)
                        .WithOne("CourseCalendar")
                        .HasForeignKey("CourseManagementService.Model.CourseCalendar", "CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CourseManagementService.Model.DailyTask", b =>
                {
                    b.HasOne("CourseManagementService.Model.CourseCalendar", null)
                        .WithMany("DailyTasks")
                        .HasForeignKey("CourseCalendarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CourseManagementService.Model.Course", b =>
                {
                    b.Navigation("CourseCalendar")
                        .IsRequired();
                });

            modelBuilder.Entity("CourseManagementService.Model.CourseCalendar", b =>
                {
                    b.Navigation("DailyTasks");
                });
#pragma warning restore 612, 618
        }
    }
}
